generator client {
  provider = "prisma-client-js"
output   = "../node_modules/.prisma/client"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           Int      @id @default(autoincrement())
  uuid         String?  @default(uuid()) @unique 
  name         String
  email        String   @unique
  passwordHash String
  balance      Float    @default(10000000)
  level        Int      @default(1)
  avatarUrl    String?
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt

  wallet       Wallet?
  holdings     Holding[]
  userTransactions UserTransaction[] 
}

model Stock {
  id          Int              @id @default(autoincrement())
  symbol      String           @unique
  name        String
  price       Float
  prevPrice   Float?
  changeRate  Float?
  createdAt   DateTime         @default(now())
  updatedAt   DateTime         @updatedAt

  histories   StockHistory[]
  holdings     Holding[]
  userTransactions UserTransaction[] 
}

model StockHistory {
  id        Int      @id @default(autoincrement())
  stockId   Int
  price     Float
  timestamp DateTime @default(now())

  stock Stock @relation(fields: [stockId], references: [id])
}

model Wallet {
  id         Int      @id @default(autoincrement())
  userId     Int      @unique
  totalAsset Float    @default(0)
  updatedAt  DateTime @updatedAt

  user User @relation(fields: [userId], references: [id])
}

model Holding {
  id       Int    @id @default(autoincrement())
  userId   Int
  stockId  Int
  quantity Int
  user     User   @relation(fields: [userId], references: [id])
  stock    Stock  @relation(fields: [stockId], references: [id])

  @@unique([userId, stockId])
}

model UserTransaction {
  id        Int      @id @default(autoincrement())
  userId    Int
  stockId   Int
  quantity  Int
  price     Float
  total     Float
  type      TransactionType
  createdAt DateTime @default(now())

  user  User  @relation(fields: [userId], references: [id])
  stock Stock @relation(fields: [stockId], references: [id])
}

enum TransactionType {
  BUY
  SELL
}

