generator client {
  provider = "prisma-client-js"
output   = "../node_modules/.prisma/client"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           Int      @id @default(autoincrement())
  uuid         String   @default(uuid()) @unique
  name         String?
  email        String?  @unique
  authProvider String   // 'guest' | 'google' | 'apple'
  isGuest      Boolean  @default(false)
  avatarUrl    String?
  level        Int      @default(1)
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  password     String?

  wallet       Wallet?
  holdings     Holding[]
  userTransactions UserTransaction[] 
  refreshTokens RefreshToken[]
}

model Stock {
  id          Int              @id @default(autoincrement())
  symbol      String           @unique
  name        String
  price       Float
  prevPrice   Float?
  changeRate  Float?
  createdAt   DateTime         @default(now())
  updatedAt   DateTime         @updatedAt

  histories   StockHistory[]
  holdings     Holding[]
  userTransactions UserTransaction[] 
}

model StockHistory {
  id        Int      @id @default(autoincrement())
  stockId   Int
  price     Float
  timestamp DateTime @default(now())

  stock Stock @relation(fields: [stockId], references: [id])
}

model Wallet {
  id         Int      @id @default(autoincrement())
  userId     Int      @unique
  updatedAt  DateTime @updatedAt
  balance      Float    @default(10000)

  user User @relation(fields: [userId], references: [id])
}

model Holding {
  id       Int    @id @default(autoincrement())
  userId   Int
  stockId  Int
  quantity Int
  avgBuyPrice Float @default(0) // ✅ 추가: 평균 매수 가격
  user     User   @relation(fields: [userId], references: [id])
  stock    Stock  @relation(fields: [stockId], references: [id])

  @@unique([userId, stockId])
}


model UserTransaction {
  id        Int      @id @default(autoincrement())
  userId    Int
  stockId   Int
  quantity  Int
  price     Float
  total     Float
  type      TransactionType
  createdAt DateTime @default(now())

  user  User  @relation(fields: [userId], references: [id])
  stock Stock @relation(fields: [stockId], references: [id])
}

enum TransactionType {
  BUY
  SELL
}

model RefreshToken {
  id          Int      @id @default(autoincrement())
  token       String   @unique
  userId      Int
  user        User     @relation(fields: [userId], references: [id])
  createdAt   DateTime @default(now())
  expiresAt   DateTime

  @@index([userId])
}



